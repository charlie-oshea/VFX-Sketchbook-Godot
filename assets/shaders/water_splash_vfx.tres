[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://d3pkhh4gmctkq"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_4oqb4"]
parameter_name = "colour"
default_value_enabled = true

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_ixmwr"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_mecnw"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_87agu"]
parameter_name = "fresnel_colour"
default_value_enabled = true

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_cbl2c"]
default_input_values = [0, 0.0, 1, 0.895, 2, 1e-05]
function = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 colour : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform vec4 fresnel_colour : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = colour;


// ColorParameter:5
	vec4 n_out5p0 = fresnel_colour;


// Fresnel:3
	float n_in3p3 = 1.00000;
	float n_out3p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in3p3);


// Compare:6
	float n_in6p1 = 0.89500;
	bool n_out6p0 = n_out3p0 > n_in6p1;


// Mix:4
	vec4 n_out4p0 = mix(n_out2p0, n_out5p0, vec4(n_out6p0 ? 1.0 : 0.0));


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);


}
"
flags/unshaded = true
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_4oqb4")
nodes/fragment/2/position = Vector2(-420, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeFresnel_ixmwr")
nodes/fragment/3/position = Vector2(-500, 40)
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_mecnw")
nodes/fragment/4/position = Vector2(100, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_87agu")
nodes/fragment/5/position = Vector2(-440, 440)
nodes/fragment/6/node = SubResource("VisualShaderNodeCompare_cbl2c")
nodes/fragment/6/position = Vector2(-200, 80)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 4, 0, 0, 0, 5, 0, 4, 1, 3, 0, 6, 0, 6, 0, 4, 2)
